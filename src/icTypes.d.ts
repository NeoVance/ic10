export type TypeSlotParameter = 'ChargeRatio' | 'Class' | 'Damage' | 'Efficiency' | 'Growth' | 'Health' | 'Mature' | 'MaxQuantity' | 'OccupantHash' | 'Occupied' | 'Seeding' | 'SortingClass';
export declare function isSlotParameter(val: string): val is TypeSlotParameter;
export type TypeDeviceParameter = 'Activate' | 'Bpm' | 'Charge' | 'ClearMemory' | 'CollectableGoods' | 'Color' | 'Combustion' | 'CombustionInput' | 'CombustionLimiter' | 'CombustionOutput' | 'CombustionOutput2' | 'CompletionRatio' | 'ElevatorLevel' | 'ElevatorSpeed' | 'Error' | 'ExportCount' | 'Filtration' | 'ForceWrite' | 'Fuel' | 'HASH("name")' | 'Harvest' | 'Horizontal' | 'Idle' | 'ImportCount' | 'InterrogationProgress' | 'Lock' | 'Maximum' | 'MineablesInQueue' | 'MineablesInVicinity' | 'Minimum' | 'MinimumWattsToContact' | 'Mode' | 'NextWeatherEventTime' | 'On' | 'Open' | 'Output' | 'Plant' | 'PositionX' | 'PositionY' | 'PositionZ' | 'Power' | 'PowerActual' | 'PowerGeneration' | 'PowerPotential' | 'PowerRequired' | 'PrefabHash' | 'Pressure' | 'PressureAir' | 'PressureExternal' | 'PressureInput' | 'PressureInternal' | 'PressureOutput' | 'PressureOutput2' | 'PressureWaste' | 'Quantity' | 'Ratio' | 'RatioCarbonDioxide' | 'RatioCarbonDioxideInput' | 'RatioCarbonDioxideOutput' | 'RatioCarbonDioxideOutput2' | 'RatioNitrogen' | 'RatioNitrogenInput' | 'RatioNitrogenOutput' | 'RatioNitrogenOutput2' | 'RatioNitrousOxide' | 'RatioNitrousOxideInput' | 'RatioNitrousOxideOutput' | 'RatioNitrousOxideOutput2' | 'RatioOxygen' | 'RatioOxygenInput' | 'RatioOxygenOutput' | 'RatioOxygenOutput2' | 'RatioPollutant' | 'RatioPollutantInput' | 'RatioPollutantOutput' | 'RatioPollutantOutput2' | 'RatioVolatiles' | 'RatioVolatilesInput' | 'RatioVolatilesOutput' | 'RatioVolatilesOutput2' | 'RatioWater' | 'RatioWaterInput' | 'RatioWaterOutput' | 'RatioWaterOutput2' | 'Reagents' | 'RecipeHash' | 'RequiredPower' | 'ReturnFuelCost' | 'Rpm' | 'Setting' | 'SignalID' | 'SignalStrength' | 'SizeX' | 'SizeZ' | 'SolarAngle' | 'SolarIrradiance' | 'Stress' | 'TargetPadIndex' | 'TargetX' | 'TargetY' | 'TargetZ' | 'Temperature' | 'TemperatureExternal' | 'TemperatureInput' | 'TemperatureOutput' | 'TemperatureOutput2' | 'TemperatureSetting' | 'Throttle' | 'Time' | 'TotalMoles' | 'TotalMolesInput' | 'TotalMolesOutput' | 'TotalMolesOutput2' | 'VelocityMagnitude' | 'VelocityRelativeX' | 'VelocityRelativeY' | 'VelocityRelativeZ' | 'Vertical' | 'Volume' | 'WattsReachingContact';
export declare function isDeviceParameter(val: string): val is TypeDeviceParameter;
export type TypeFunction = 'abs' | 'acos' | 'add' | 'alias' | 'and' | 'asin' | 'atan' | 'atan2' | 'bap' | 'bapal' | 'bapz' | 'bapzal' | 'bdns' | 'bdnsal' | 'bdse' | 'bdseal' | 'beq' | 'beqal' | 'beqz' | 'beqzal' | 'bge' | 'bgeal' | 'bgez' | 'bgezal' | 'bgt' | 'bgtal' | 'bgtz' | 'bgtzal' | 'ble' | 'bleal' | 'blez' | 'blezal' | 'blt' | 'bltal' | 'bltz' | 'bltzal' | 'bna' | 'bnaal' | 'bnan' | 'bnaz' | 'bnazal' | 'bne' | 'bneal' | 'bnez' | 'bnezal' | 'brap' | 'brapz' | 'brdns' | 'brdse' | 'breq' | 'breqz' | 'brge' | 'brgez' | 'brgt' | 'brgtz' | 'brle' | 'brlez' | 'brlt' | 'brltz' | 'brna' | 'brnan' | 'brnaz' | 'brne' | 'brnez' | 'ceil' | 'cos' | 'debug' | 'define' | 'div' | 'exp' | 'floor' | 'hcf' | 'j' | 'jal' | 'jr' | 'l' | 'lb' | 'lbn' | 'lbns' | 'lbs' | 'log' | 'lr' | 'ls' | 'max' | 'min' | 'mod' | 'move' | 'mul' | 'nor' | 'or' | 'peek' | 'pop' | 'push' | 'rand' | 'return' | 'round' | 's' | 'sap' | 'sapz' | 'sb' | 'sbn' | 'sdns' | 'sdse' | 'select' | 'seq' | 'seqz' | 'sge' | 'sgez' | 'sgt' | 'sgtz' | 'sin' | 'sle' | 'sleep' | 'slez' | 'slt' | 'sltz' | 'sna' | 'snan' | 'snanz' | 'snaz' | 'sne' | 'snez' | 'sqrt' | 'ss' | 'stack' | 'sub' | 'tan' | 'trunc' | 'xor' | 'yield';
export declare function isFunction(val: string): val is TypeFunction;
export type TypeConst = 'deg2rad' | 'nan' | 'ninf' | 'pi' | 'pinf' | 'rad2deg';
export declare function isConst(val: string): val is TypeConst;
export type TypeChannel = 'Channel0' | 'Channel1' | 'Channel2' | 'Channel3' | 'Channel4' | 'Channel5' | 'Channel6' | 'Channel7';
export declare function isChannel(val: string): val is TypeChannel;
export type TypeBM = 'Average' | 'Maximum' | 'Minimum' | 'Sum';
export declare function isBM(val: string): val is TypeBM;
export type TypeRM = 'Contents' | 'Recipe' | 'Required';
export declare function isRM(val: string): val is TypeRM;
